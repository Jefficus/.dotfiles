# set the default shell
set -g default-command /usr/bin/zsh
set -g default-shell /usr/bin/zsh

# remap prefix to Ctl-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# lets me scroll properly
set -g mouse on

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling with C-a C-a
unbind ^A
bind ^A select-pane -t :.+

# easier to remember splitters
bind | split-window -h
bind - split-window -v

#-------------------------------------------------------#
#Pane colours
#-------------------------------------------------------#
# make the inactive panes appear cloudy
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# and then unbind the arrow keys so I'm forced to use the vim keys
unbind Left
unbind Down
unbind Up
unbind Right

# List of tmux plugins to load
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-yank' # tmux buff autocp to clipbd



#######################################################
# EXPERIMENTAL
# Place where I try new commands to see if I like them
# If they stay here for a while, it's probably time to
# move them somewhere higher up.
######################################################


####################################################
# Setting up a copy/paste system
# (Also requires the yank plugin, I think)
# 
# ENTER COPY MODE:  C-a [
# QUIT COPY MODE:   ESC or q
# DEFINE SELECTION: v motionkeys... 
# YANK TO TMUX BUF: y
# COPY TMUX BUF - CLPBD: C-a >
# COPY CLIPBD BUF - TMUX: C-a <

# vim keys in copy and choose mode
set-window-option -g mode-keys vi

# enable vim-like begin and end selection keys for copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# END OF copy/paste system
#####################################################


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.dotfiles/plugins_tmux/tpm/tpm'

# configure the tmux status bar colors to indicate which machine
# tmux is running on
if [[ $(hostname) == 'blackburt' ]]; then
    set-option -g status-bg black
    set-option -g status-fg white
elif [[ $(hostname) == 'frankenburt' ]]; then
    set-option -g status-bg blue
    set-option -g status-fg white
elif [[ $(hostname) == 'graham' ]]; then
    set-option -g status-bg green
    set-option -g status-fg black
elif [[ $(hostname) == 'cedar' ]]; then
    set-option -g status-bg brown
    set-option -g status-fg white
elif [[ $(hostname) == 'yakitori' ]]; then
    set-option -g status-bg yellow
    set-option -g status-fg black
else
    set-option -g status-bg white
    set-option -g status-fg black
fi
